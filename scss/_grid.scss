$amount: 6;

@mixin grid-item($amount) {
  @for $i from 1 through $amount {
    &:nth-of-type(#{$amount}n + #{$i}) {
      grid-column: #{$i + $i - 1} / span 3;
      @if $i % 2 == 0 {
        grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
      }
    }
  }

  @for $i from 1 through 20 {
    &:nth-of-type(n + #{$i * $amount + 1}) {
      --counter: #{$i + 1};
    }
  }
}


.hex-grid__list {
    --amount: 6;
    --counter: 1;
    display: grid;
    list-style-type: none;
    margin: 0;
    padding: 0;
    grid-template-columns: repeat(var(--amount), 1fr 2fr) 1fr;
    grid-gap: 1rem 2rem;
}

.hex-grid__item {
    position: relative;
    grid-column: 1 / span 3;
    grid-row: calc(var(--counter) + var(--counter)) / span 2;
    height: 0;
    padding-bottom: 90%;
    font-size: 100%;
    @media(min-width: 900px) {
      font-size: 70px;
    }

    // Columns
    @for $i from 1 through $amount {
        &:nth-of-type(#{$amount}n + #{$i}) {
            grid-column: #{$i + $i - 1} / span 3;
            @if $i % 2 == 0 {
                grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
            }
        }
    }

    // Rows
    @for $i from 1 through 20 {
        &:nth-of-type(n + #{$i * $amount + 1}) {
            --counter: #{$i + 1};
        }
    }
}

.hex-grid__content {
    position: absolute;
    left: 0;
    top: 0;
    color: white;
    height: 100%;
    width: 100%;
    background-color: #1f1f1f;
    justify-content: center;
    align-items: center;
    display: flex;
    clip-path: polygon(75% 0, 100% 50%, 75% 100%, 25% 100%, 0 50%, 25% 0);
}

.hex-grid__item:nth-of-type(2n) {
  .hex-grid__content {
    // background-color: grey;
  }
}
